<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_mine</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>color = c_white;
speed = 4;
gravity = 0.3;
owner_num = -1;
rotate_dir = 1;  // based on owner's x_scale
remote = false;
force = 8;
armed = false;
arming_delay = 30;
arming_delay_set = false;
has_collided = false;
collision = COL_BOTTOM;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set armed

armed = true;
image_speed = 0.1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Collision &amp; Relevant Behavior

if (!has_collided) {
    var wall = collision_line(x, y, x + hspeed, y + vspeed, o_collision_wall, true, false);
    var sign_hspeed = sign(hspeed);
    var sign_vspeed = sign(vspeed);
    if (wall) {
        has_collided = true;
        speed = 0;
        gravity = 0;
        var dist;
        with (wall) {
            dist = distance_to_point(other.x, other.y);
        }
        var xx = x + lengthdir_x(dist, direction);
        var yy = y + lengthdir_y(dist, direction);
        x = xx;
        y = yy;
    }
    if (collision_point(x + 1, y - sign_vspeed, wall, false, false)) {
        collision = COL_RIGHT;
    }
    if (collision_point(x - 1, y - sign_vspeed, wall, false, false)) {
        collision = COL_LEFT;
    }
    if (collision_point(x - sign_hspeed, y + 1, wall, false, false)) {
        collision = COL_BOTTOM;
    }
    if (collision_point(x - sign_hspeed, y - 1, wall, false, false)) {
        collision = COL_TOP;
    }
    
    arming_delay_set = false;
    image_speed = 0;
    image_index = 0;
    image_angle += 10 * rotate_dir;
}
else {
    // TODO: use what was done for o_missile
    switch(collision) {
        case COL_LEFT:
            image_angle = 270;
            break;
        case COL_RIGHT:
            image_angle = 90;
            break;
        case COL_TOP:
            image_angle = 180;
            break;
        case COL_BOTTOM:
            image_angle = 0;
            break;
    }
    if (!arming_delay_set) {
        arming_delay_set = true;
        alarm[0] = arming_delay;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!remote &amp;&amp; armed &amp;&amp; other.id != owner_id) {
    other.missile_x = x;
    other.missile_y = y;
    other.missile_force = force;
    with (instance_create(x, y, o_explosion)) {
        color = other.color;
        radius = 32;
        owner_id = other.owner_id;
    }
    instance_destroy();
    /*with (other) {
        instance_destroy();
    }*/
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_trail(10, 8, color, -1, true, 0.5);
draw_sprite_ext(sprite_index, image_index, x, y, 1, 1, image_angle, color, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
