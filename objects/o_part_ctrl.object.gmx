<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Particles

system = part_system_create();
emitter = part_emitter_create(system);
system_surf = part_system_create();
emitter_surf = part_emitter_create(system_surf);
part_system_depth(system_surf, 10000);

// TYPES
// default missile hit
type_missile_hit = part_type_create();
part_type_shape(type_missile_hit, pt_shape_line);
part_type_size(type_missile_hit, 0, 1, -0.01, 0);
part_type_scale(type_missile_hit, 0.2, 0.2);
part_type_speed(type_missile_hit, 0, 5, 0, 0);
part_type_gravity(type_missile_hit, 0.2, 270);
part_type_orientation(type_missile_hit, 0, 0, 0, 0, true);
part_type_blend(type_missile_hit, false);
part_type_life(type_missile_hit, 120, 120);
// energy missile hit
type_energy_hit = part_type_create();
part_type_shape(type_energy_hit, pt_shape_line);
part_type_size(type_energy_hit, 0, 1, -0.01, 0);
part_type_scale(type_energy_hit, 0.2, 0.2);
part_type_speed(type_energy_hit, -10, 10, -1, 0); // 1, 1, 0, 1);
part_type_orientation(type_energy_hit, 0, 0, 0, 0, true);
part_type_blend(type_energy_hit, false);
part_type_life(type_energy_hit, 120, 120);
// explosion
type_explosion = part_type_create();
part_type_shape(type_explosion, pt_shape_line);
part_type_size(type_explosion, 0, 1, -0.03, 0);
part_type_scale(type_explosion, 0.2, 0.2);
part_type_speed(type_explosion, 2, 8, -0.2, 0); // 10, 15, -1, 0);
part_type_orientation(type_explosion, 0, 0, 0, 0, true);
part_type_blend(type_explosion, false);
part_type_life(type_explosion, 120, 120);
// thrust
type_thrust = part_type_create();
part_type_shape(type_thrust, pt_shape_disk);
part_type_size(type_thrust, 0, 1, -0.03, 0);
part_type_scale(type_thrust, 0.2, 0.2);
part_type_speed(type_thrust, 2, 5, -0.2, 0);
part_type_orientation(type_thrust, 0, 0, 0, 0, true);
part_type_blend(type_thrust, false);
part_type_alpha1(type_thrust, 0.5);
part_type_life(type_thrust, 120, 120);
// blood decal
type_blood_decal = part_type_create();
part_type_shape(type_blood_decal, pt_shape_line);
part_type_size(type_blood_decal, 0, 1, -0.01, 0);
part_type_scale(type_blood_decal, 0.2, 0.2);
part_type_speed(type_blood_decal, 0, 8, 0, 0);
part_type_gravity(type_blood_decal, 0.2, 270);
part_type_orientation(type_blood_decal, 0, 0, 0, 0, true);
part_type_blend(type_blood_decal, true);
part_type_alpha1(type_blood_decal, 0.5);
part_type_life(type_blood_decal, 10, 10);
// foot step
type_foot_step = part_type_create();
part_type_shape(type_foot_step, pt_shape_line);
part_type_size(type_foot_step, 0, 1, -0.01, 0);
part_type_scale(type_foot_step, 0.2, 0.2);
part_type_speed(type_foot_step, 0, 3, 0, 0);
part_type_gravity(type_foot_step, 0.1, 270);
part_type_orientation(type_foot_step, 0, 0, 0, 0, true);
part_type_blend(type_foot_step, true);
part_type_alpha1(type_foot_step, 0.5);
part_type_life(type_foot_step, 120, 120);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Clean up

part_system_destroy(system);
part_system_destroy(system_surf);
//part emitter, type...
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
